# workflow 의 이름
name: my_action workflow

on:
  push:
    branches: [ "main" ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# 워크플로우의 메인 컴포넌트
# 여러 개의 스텝들을 포함한다.
jobs:
  echo:
    # 머신의 목적지
    runs-on: ubuntu-22.04
    # tasks들을 포함한다
    steps:
      - run: echo 'Test, Github Action'

  build:
    runs-on: ubuntu-22.04
    steps:
      # This step checks out a copy of your repository  
      # 소유자는 actions/ 저장소 이름은 checkout @ 사용 가능한 최신 버전은 v3
      - uses: actions/checkout@v3
      # 소유자는 actions/ 저장소 이름은 setup-node @ 사용 가능한 최신 버전은 v3
      - uses: actions/setup-node@v3

      # gitfolio 설치 후,
      # 웹사이트를 빌드할 수 있는 지 확인
      - name: install dependencies
        run: |
          npm i gitfolio -g 
          gitfolio build sonah5009

  jekyll:
      runs-on: ubuntu-20.04 
      steps:
        # checkout code
        - uses: actions/checkout@v3

        # Use ruby/setup-ruby to shorten build times
        # https://github.com/ruby/setup-ruby
        - uses: ruby/setup-ruby@v1
          with:
            ruby-version: 3.1 # Not needed with a .ruby-version file
            bundler-cache: true # runs 'bundle install' and caches installed gems automatically

        # use jekyll-action-ts to build
        # https://github.com/limjh16/jekyll-action-ts
        - uses: limjh16/jekyll-action-ts@v2
          with:
            enable_cache: true

        # use actions-gh-pages to deploy
        # https://github.com/peaceiris/actions-gh-pages
        - name: Deploy
          uses: peaceiris/actions-gh-pages@v3
          with:
            # GITHUB_TOKEN secret is set up automatically
            github_token: ${{ secrets.GITHUB_TOKEN }}
            publish_dir: ./_site
